var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AnswerComponent.html",[0,0.405,1,0.767]],["body/components/AnswerComponent.html",[0,0.489,1,1.039,2,1.149,3,0.313,4,0.313,5,0.859,6,0.859,7,0.859,8,0.859,9,0.262,10,1.384,11,1.525,12,2.168,13,0.748,14,1.86,15,1.623,16,1.559,17,1.149,18,3.222,19,1.149,20,2.647,21,0.368,22,0.875,23,2.074,24,2.587,25,2.587,26,1.002,27,3.305,28,2.433,29,3.305,30,2.647,31,1.22,32,1.232,33,2.647,34,0.688,35,0.054,36,1.724,37,1.724,38,1.22,39,1.606,40,1.724,41,1.724,42,2.902,43,1.319,44,1.149,45,2.77,46,1.724,47,0.368,48,1.724,49,0.313,50,0.313,51,0.17,52,1.724,53,3.615,54,2.433,55,1.384,56,3.615,57,2.125,58,1.781,59,2.125,60,1.384,61,1.781,62,3.615,63,2.433,64,2.433,65,1.724,66,1.781,67,3.615,68,1.724,69,2.125,70,2.647,71,2.647,72,2.647,73,2.647,74,2.647,75,1.724,76,1.724,77,1.724,78,1.384,79,1.724,80,0.653,81,1.319,82,1.319,83,0.859,84,1.802,85,0.859,86,1.724,87,1.724,88,0.875,89,0.859,90,0.429,91,0.859,92,0.496,93,0.859,94,0.429,95,0.859,96,0.429,97,0.653,98,0.859,99,0.859,100,0.859,101,0.017,102,0.026,103,0.017]],["title/components/AnswerCreateComponent.html",[0,0.405,90,0.664]],["body/components/AnswerCreateComponent.html",[0,0.556,1,0.614,2,1.349,3,0.388,4,0.388,5,1.065,6,1.065,7,1.065,8,1.065,9,0.324,13,0.927,14,1.997,15,1.743,16,1.895,17,1.349,19,1.349,21,0.456,22,1.027,23,1.935,26,1.177,31,1.177,32,1.156,34,0.783,35,0.052,38,0.809,39,1.549,47,0.664,49,0.388,50,0.564,51,0.21,80,0.809,81,1.549,82,1.549,83,1.065,84,2.005,85,1.065,88,1.21,89,1.065,90,1.001,91,1.065,92,0.614,93,1.065,94,0.531,95,1.065,96,0.531,97,0.809,98,1.065,99,1.065,100,1.065,101,0.021,102,0.03,103,0.021,104,2.876,105,2.13,106,1.438,107,2.495,108,2.941,109,2.495,110,2.461,111,2.706,112,3.229,113,2.137,114,3.431,115,2.461,116,2.137,117,0.927,118,0.927,119,2.137,120,2.137,121,2.495,122,2.137,123,2.137,124,1.715,125,1.715,126,1.065,127,1.065,128,1.438,129,1.23,130,1.715,131,2.091,132,3.108,133,3.108,134,3.108]],["title/classes/AnswerResponseModel.html",[51,0.263,135,1.797]],["body/classes/AnswerResponseModel.html",[3,0.685,4,0.685,9,0.573,21,0.806,22,1.5,32,1.084,34,0.806,35,0.051,50,0.685,51,0.371,101,0.037,102,0.044,103,0.037,135,3.055,136,3.773,137,3.645,138,3.029,139,3.645,140,2.173,141,3.773,142,3.773]],["title/injectables/AnswerService.html",[143,1.331,144,1.159]],["body/injectables/AnswerService.html",[3,0.515,4,0.515,9,0.431,16,1.075,21,0.606,23,1.851,26,1.435,31,1.615,32,1.089,35,0.053,38,1.075,47,0.911,49,0.515,50,0.515,51,0.279,88,0.937,101,0.028,102,0.037,103,0.028,117,1.231,118,1.231,139,2.278,143,1.888,144,1.644,145,1.91,146,2.278,147,3.042,148,2.838,149,3.789,150,2.838,151,3.042,152,2.278,153,2.278,154,3.424,155,2.838,156,2.278,157,2.278,158,1.91,159,1.634,160,2.278,161,2.838,162,3.063,163,2.278,164,2.838,165,2.549,166,2.838,167,2.838,168,2.278,169,2.838,170,2.838,171,2.838,172,2.838,173,2.838,174,2.278,175,2.838,176,2.838,177,2.278,178,2.278]],["title/components/AppComponent.html",[0,0.405,92,0.767]],["body/components/AppComponent.html",[0,0.637,1,0.791,2,1.61,3,0.499,4,0.499,5,1.371,6,1.371,7,1.371,8,1.371,9,0.417,13,1.194,14,2.144,15,1.871,16,1.042,17,1.61,19,1.61,21,0.588,22,1.226,32,0.791,34,0.588,35,0.052,43,1.371,44,1.194,47,0.588,49,0.499,50,0.499,51,0.271,80,1.042,81,1.85,82,1.85,83,1.371,84,2.24,85,1.371,88,1.226,89,1.371,90,0.684,91,1.371,92,1.292,93,1.371,94,0.684,95,1.371,96,0.684,97,1.042,98,1.371,99,1.371,100,1.371,101,0.027,102,0.036,103,0.027,129,1.584,158,2.497,179,2.209,180,4.199,181,3.711,182,4.199,183,2.979,184,2.751,185,3.711]],["title/modules/AppModule.html",[186,1.538,187,1.538]],["body/modules/AppModule.html",[1,1.249,3,0.36,4,0.36,9,0.301,15,0.752,35,0.053,47,1.082,49,0.36,50,0.36,51,0.195,80,0.752,90,1.149,92,1.417,94,1.081,96,1.081,101,0.019,102,0.029,103,0.019,105,0.989,126,0.989,144,1.885,186,1.143,187,3.035,188,0.989,189,1.143,190,2.818,191,2.818,192,2.818,193,1.336,194,1.594,195,1.594,196,1.594,197,1.594,198,1.594,199,2.165,200,2.165,201,1.645,202,2.364,203,1.594,204,1.594,205,1.985,206,2.945,207,2.364,208,2.945,209,2.364,210,1.336,211,2.364,212,2.945,213,1.594,214,2.945,215,1.594,216,1.594,217,2.945,218,1.985,219,1.985,220,1.985,221,2.945,222,1.985,223,1.594,224,1.985,225,1.594,226,1.143,227,1.594,228,1.985,229,1.594,230,1.336,231,1.985,232,1.594,233,1.985,234,1.985,235,1.985,236,1.985,237,1.985,238,1.985,239,1.985,240,1.985]],["title/modules/AppRoutingModule.html",[186,1.538,200,1.331]],["body/modules/AppRoutingModule.html",[0,0.631,3,0.594,4,0.594,9,0.496,35,0.052,47,1.027,49,0.594,50,0.594,51,0.322,94,1.034,96,1.034,97,1.574,101,0.032,102,0.041,103,0.032,159,1.884,188,1.631,193,2.202,200,2.072,207,2.627,211,3.337,223,2.627,225,2.627,226,1.884,227,2.627,241,3.272,242,3.272,243,4.157,244,2.631,245,2.202,246,3.272,247,3.272,248,4.569,249,3.272,250,3.272,251,3.272,252,3.272,253,3.272]],["title/interfaces/DialogData.html",[115,1.538,127,1.331]],["body/interfaces/DialogData.html",[0,0.615,3,0.571,4,0.571,9,0.477,14,1.365,15,1.191,16,1.698,17,1.365,19,1.365,21,0.672,22,1.339,23,1.759,31,1.191,34,0.672,35,0.053,39,1.568,47,0.866,49,0.571,50,0.735,51,0.31,90,0.782,101,0.031,102,0.04,103,0.031,104,2.116,105,1.568,106,2.116,107,2.525,108,2.525,109,2.525,110,1.811,111,2.116,112,2.525,114,3.254,115,2.583,121,2.525,124,2.525,125,2.525,126,1.568,127,1.568,128,3.188,129,2.583,130,2.525,254,3.145]],["title/components/QuestionComponent.html",[0,0.405,94,0.664]],["body/components/QuestionComponent.html",[0,0.358,1,0.312,2,0.792,3,0.197,4,0.197,5,0.541,6,0.541,7,0.541,8,0.541,9,0.165,11,1.051,12,1.228,13,0.471,14,1.539,15,1.343,16,1.047,17,0.792,19,0.792,21,0.232,22,0.603,23,2.137,24,1.465,25,1.465,26,0.691,27,2.679,28,1.86,29,2.679,31,0.691,32,1.339,34,0.899,35,0.054,38,1.343,39,1.855,42,1.465,43,1.176,44,1.024,45,1.86,47,0.713,49,0.197,50,0.197,51,0.107,54,1.86,55,0.872,57,1.465,58,1.228,59,1.465,60,0.872,61,1.228,63,1.86,64,1.86,66,1.228,69,0.872,78,0.872,80,0.411,81,0.909,82,0.909,83,0.541,84,1.378,85,0.541,88,1.018,89,0.541,90,0.454,91,0.541,92,0.312,93,0.541,94,0.688,95,0.541,96,0.27,97,1.41,98,0.541,99,0.541,100,0.541,101,0.018,102,0.018,103,0.011,105,0.541,110,1.774,111,0.731,117,1.024,118,1.024,126,0.541,128,1.86,129,1.051,131,0.731,140,0.625,144,1.199,151,0.872,159,2.144,165,1.587,174,2.219,201,1.047,229,0.872,230,0.731,232,0.872,245,0.731,255,0.872,256,1.465,257,2.359,258,1.824,259,3.701,260,1.824,261,3.337,262,1.824,263,1.824,264,1.824,265,1.824,266,1.824,267,2.219,268,2.764,269,1.086,270,2.764,271,1.894,272,2.359,273,3.081,274,1.824,275,1.824,276,1.086,277,1.824,278,1.086,279,1.824,280,1.086,281,1.086,282,1.086,283,1.086,284,1.086,285,1.086,286,1.086,287,1.086,288,1.086,289,1.824,290,1.086,291,1.086,292,1.086,293,1.086,294,1.086,295,1.086,296,0.872,297,1.086,298,1.086,299,1.086,300,1.086,301,1.086,302,1.086,303,1.086,304,1.086,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.086,312,1.086,313,1.086,314,1.086,315,1.086,316,1.086,317,1.086,318,1.086,319,1.086,320,2.764,321,2.764,322,1.086,323,1.086,324,1.086,325,1.824,326,1.086,327,1.086,328,1.086,329,1.086,330,1.086,331,1.086,332,1.086,333,1.086,334,0.872,335,1.086,336,1.086,337,1.086,338,1.086,339,1.086,340,1.086,341,1.086,342,1.086,343,1.086,344,1.086,345,1.086,346,1.086,347,1.086,348,1.086,349,1.086,350,1.086,351,1.824,352,2.764,353,1.086,354,2.764,355,1.086,356,1.824,357,1.086,358,0.872,359,1.086,360,1.086,361,1.086]],["title/components/QuestionListComponent.html",[0,0.405,96,0.664]],["body/components/QuestionListComponent.html",[0,0.502,1,0.517,2,1.187,3,0.327,4,0.327,5,0.897,6,0.897,7,0.897,8,0.897,9,0.273,11,1.576,12,1.212,13,0.781,14,1.889,15,1.648,16,0.682,17,1.187,19,1.187,21,0.385,22,0.904,26,1.036,28,2.488,31,1.036,32,1.204,34,0.707,35,0.053,38,1.253,39,1.65,47,0.585,49,0.327,50,0.327,51,0.177,61,1.841,63,2.488,64,2.488,66,1.841,80,0.682,81,1.364,82,1.364,83,0.897,84,1.843,85,0.897,88,1.093,89,0.897,90,0.448,91,0.897,92,0.517,93,0.897,94,0.448,95,0.897,96,0.92,97,1.739,98,1.65,99,0.897,100,0.897,101,0.018,102,0.027,103,0.018,110,1.576,117,0.781,118,0.781,140,1.037,201,1.253,226,2.506,230,1.212,256,1.445,259,3.494,267,2.968,271,1.445,296,2.197,358,2.197,362,3.494,363,1.445,364,3.31,365,2.736,366,2.197,367,2.736,368,3.697,369,1.801,370,2.736,371,1.801,372,1.801,373,1.801,374,1.801,375,1.445,376,1.801,377,1.801,378,1.801,379,1.801,380,1.801,381,1.801,382,1.801,383,2.736,384,2.736,385,1.801,386,2.736,387,3.697,388,1.801,389,3.697,390,1.801,391,1.801,392,1.801,393,2.736,394,1.801,395,1.801,396,1.801,397,1.801]],["title/injectables/QuestionService.html",[143,1.331,201,1.011]],["body/injectables/QuestionService.html",[3,0.431,4,0.431,9,0.36,21,0.507,22,1.107,23,2.14,26,1.269,31,1.471,32,1.213,34,0.507,35,0.054,38,1.269,43,1.183,44,1.03,47,0.83,49,0.431,50,0.431,51,0.234,88,0.784,97,1.471,101,0.023,102,0.033,103,0.023,117,1.03,118,1.03,140,1.367,143,1.67,145,1.597,147,3.388,152,1.906,153,1.906,154,3.388,156,1.906,157,1.906,158,1.597,159,1.93,160,2.69,162,3.109,163,2.69,165,2.614,168,2.69,177,2.69,178,2.69,201,1.269,366,3.119,375,1.906,398,1.906,399,3.351,400,3.351,401,2.374,402,3.351,403,2.374,404,2.374,405,3.351,406,3.351,407,3.351,408,3.351,409,3.351,410,2.374,411,2.374,412,2.374,413,2.374,414,2.374,415,2.374,416,2.374,417,2.374,418,2.374]],["title/pipes/ReversePipe.html",[199,1.331,419,1.538]],["body/pipes/ReversePipe.html",[3,0.624,4,0.624,9,0.522,11,1.98,13,1.492,26,1.302,32,0.988,34,0.734,35,0.053,38,1.302,44,1.492,47,0.734,49,0.624,50,0.624,51,0.338,88,1.544,101,0.034,102,0.042,103,0.034,117,1.492,118,1.492,162,2.313,199,2.137,419,2.47,420,3.438,421,2.76,422,4.289,423,3.438,424,3.438,425,3.438,426,4.289,427,3.438,428,3.438,429,3.438]],["title/coverage.html",[430,2.919]],["body/coverage.html",[0,0.726,1,0.836,9,0.441,10,2.335,34,0.621,35,0.052,51,0.286,90,0.724,92,0.836,94,0.724,96,0.724,101,0.028,102,0.038,103,0.028,104,2.592,105,1.92,106,2.592,115,1.675,127,1.45,131,1.957,135,1.957,137,2.335,138,2.335,143,1.92,144,1.262,146,2.335,179,2.335,199,1.45,201,1.101,226,1.675,255,2.335,362,2.335,363,2.335,398,2.335,419,1.675,421,2.335,430,2.335,431,2.909,432,2.909,433,2.909,434,5.277,435,4.318,436,3.852,437,2.909,438,2.909,439,2.909,440,4.318,441,2.909,442,2.335,443,3.852,444,3.092,445,2.335,446,2.909,447,2.909]],["title/dependencies.html",[189,1.848,448,2.234]],["body/dependencies.html",[35,0.053,49,0.606,101,0.033,102,0.041,103,0.033,126,1.664,189,1.923,209,3.38,210,2.833,213,2.681,215,2.681,216,2.681,245,2.247,449,3.339,450,3.339,451,3.339,452,4.211,453,3.339,454,5.176,455,3.339,456,3.339,457,3.339,458,3.339,459,3.339,460,3.339,461,3.339,462,3.339,463,3.339,464,3.339,465,3.339,466,3.339,467,3.339]],["title/index.html",[21,0.477,468,2.234,469,2.234]],["body/index.html",[35,0.047,101,0.041,102,0.047,103,0.041,183,3.356,470,4.181,471,4.181]],["title/modules.html",[188,1.812]],["body/modules.html",[35,0.046,101,0.039,102,0.046,103,0.039,187,2.324,188,2.011,200,2.011,210,2.715,472,4.035,473,4.035,474,4.725,475,4.035,476,4.035]],["title/overview.html",[477,2.919]],["body/overview.html",[1,1.23,2,1.24,35,0.051,51,0.281,54,2.88,80,1.082,90,1.065,92,1.434,94,1.065,96,1.065,101,0.028,102,0.037,103,0.028,127,1.424,144,1.857,145,1.923,186,1.646,187,3.133,188,1.424,189,1.646,190,2.294,191,2.294,192,2.294,193,1.923,194,2.294,195,2.294,196,2.294,197,2.294,198,2.294,199,2.133,200,2.133,201,1.621,202,3.056,203,2.294,204,2.294,244,1.646,334,3.056,419,1.646,477,2.294,478,2.858,479,2.858]],["title/routes.html",[244,2.094]],["body/routes.html",[35,0.047,101,0.041,102,0.047,103,0.041,244,2.433]],["title/miscellaneous/variables.html",[480,1.793,481,2.576]],["body/miscellaneous/variables.html",[21,0.781,34,0.951,35,0.053,43,2.219,44,1.932,45,2.459,58,2.459,101,0.036,102,0.044,103,0.036,442,2.934,444,4.013,445,2.934,480,2.934,481,2.934,482,3.654,483,3.654,484,4.453,485,4.453]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"classes/AnswerResponseModel.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["0'):(answer.downvotes",{"_index":68,"title":{},"body":{"components/AnswerComponent.html":{}}}],["0'):(answer.upvotes",{"_index":65,"title":{},"body":{"components/AnswerComponent.html":{}}}],["0'):(q.downvotes",{"_index":390,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["0'):(q.upvotes",{"_index":388,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["0'):(question.downvotes",{"_index":355,"title":{},"body":{"components/QuestionComponent.html":{}}}],["0'):(question.upvotes",{"_index":353,"title":{},"body":{"components/QuestionComponent.html":{}}}],["0.8.26",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["0\\'):(answer.downvotes",{"_index":87,"title":{},"body":{"components/AnswerComponent.html":{}}}],["0\\'):(answer.upvotes",{"_index":86,"title":{},"body":{"components/AnswerComponent.html":{}}}],["0\\'):(q.downvotes",{"_index":397,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["0\\'):(q.upvotes",{"_index":396,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["0\\'):(question.downvotes",{"_index":361,"title":{},"body":{"components/QuestionComponent.html":{}}}],["0\\'):(question.upvotes",{"_index":360,"title":{},"body":{"components/QuestionComponent.html":{}}}],["1",{"_index":54,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{},"overview.html":{}}}],["1.9.0",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":383,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["2",{"_index":334,"title":{},"body":{"components/QuestionComponent.html":{},"overview.html":{}}}],["2.5.4",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":393,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["3",{"_index":479,"title":{},"body":{"overview.html":{}}}],["30px",{"_index":79,"title":{},"body":{"components/AnswerComponent.html":{}}}],["5",{"_index":478,"title":{},"body":{"overview.html":{}}}],["6.3.3",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["7.2.11",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["7.3.6",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":324,"title":{},"body":{"components/QuestionComponent.html":{}}}],["_answer",{"_index":272,"title":{},"body":{"components/QuestionComponent.html":{}}}],["_question",{"_index":271,"title":{},"body":{"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["_question:questionservice",{"_index":377,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["a.questionid",{"_index":176,"title":{},"body":{"injectables/AnswerService.html":{}}}],["activatedroute",{"_index":270,"title":{},"body":{"components/QuestionComponent.html":{}}}],["actual_component",{"_index":100,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["add",{"_index":356,"title":{},"body":{"components/QuestionComponent.html":{}}}],["ajax",{"_index":152,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["ajax.getjson(endpoint).pipe",{"_index":163,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["angular/animations",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":49,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":126,"title":{},"body":{"components/AnswerCreateComponent.html":{},"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/QuestionComponent.html":{},"dependencies.html":{}}}],["anonymus",{"_index":74,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer",{"_index":16,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["answer'},{'name",{"_index":89,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["answer.answer",{"_index":169,"title":{},"body":{"injectables/AnswerService.html":{}}}],["answer.component.html",{"_index":20,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer.component.scss",{"_index":18,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer.createdat",{"_index":70,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer.createdby.name",{"_index":72,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer.createdby.surname",{"_index":73,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer.downvotes",{"_index":67,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer.id",{"_index":166,"title":{},"body":{"injectables/AnswerService.html":{}}}],["answer.upvotes",{"_index":62,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer__avatar",{"_index":75,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answercomponent",{"_index":1,"title":{"components/AnswerComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["answercreatecomponent",{"_index":90,"title":{"components/AnswerCreateComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["answerresponsemodel",{"_index":135,"title":{"classes/AnswerResponseModel.html":{}},"body":{"classes/AnswerResponseModel.html":{},"coverage.html":{}}}],["answers",{"_index":174,"title":{},"body":{"injectables/AnswerService.html":{},"components/QuestionComponent.html":{}}}],["answers.filter",{"_index":175,"title":{},"body":{"injectables/AnswerService.html":{}}}],["answers:any",{"_index":299,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answerservice",{"_index":144,"title":{"injectables/AnswerService.html":{}},"body":{"injectables/AnswerService.html":{},"modules/AppModule.html":{},"components/QuestionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["answerssub",{"_index":260,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answerssub:any",{"_index":304,"title":{},"body":{"components/QuestionComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["app.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":92,"title":{"components/AppComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":187,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":200,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":140,"title":{},"body":{"classes/AnswerResponseModel.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{}}}],["arrow_back",{"_index":351,"title":{},"body":{"components/QuestionComponent.html":{}}}],["arrow_drop_down",{"_index":66,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["arrow_drop_up",{"_index":61,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["available",{"_index":476,"title":{},"body":{"modules.html":{}}}],["beta.24",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":42,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{}}}],["bootstrap",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bottom",{"_index":392,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["browse",{"_index":474,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["card",{"_index":391,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["catcherror",{"_index":155,"title":{},"body":{"injectables/AnswerService.html":{}}}],["catcherror(error",{"_index":177,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["catcherror,filter",{"_index":404,"title":{},"body":{"injectables/QuestionService.html":{}}}],["challenge",{"_index":471,"title":{},"body":{"index.html":{}}}],["class",{"_index":51,"title":{"classes/AnswerResponseModel.html":{}},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"classes/AnswerResponseModel.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":136,"title":{},"body":{"classes/AnswerResponseModel.html":{}}}],["closed",{"_index":329,"title":{},"body":{"components/QuestionComponent.html":{}}}],["cluster_appmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":470,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":85,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"overview.html":{}}}],["console.log('the",{"_index":328,"title":{},"body":{"components/QuestionComponent.html":{}}}],["const",{"_index":159,"title":{},"body":{"injectables/AnswerService.html":{},"modules/AppRoutingModule.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"injectables/AnswerService.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{}}}],["constructor(_question",{"_index":369,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["constructor(dialogref",{"_index":113,"title":{},"body":{"components/AnswerCreateComponent.html":{}}}],["constructor(route",{"_index":269,"title":{},"body":{"components/QuestionComponent.html":{}}}],["core",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":430,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":107,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{}}}],["create'},{'name",{"_index":91,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["create.component",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"components/QuestionComponent.html":{}}}],["create.component.html",{"_index":109,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{}}}],["create.component.scss",{"_index":108,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{}}}],["create.component.ts",{"_index":106,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["create.component.ts:14",{"_index":116,"title":{},"body":{"components/AnswerCreateComponent.html":{}}}],["create.component.ts:17",{"_index":123,"title":{},"body":{"components/AnswerCreateComponent.html":{}}}],["create.component.ts:18",{"_index":122,"title":{},"body":{"components/AnswerCreateComponent.html":{}}}],["create.component.ts:20",{"_index":119,"title":{},"body":{"components/AnswerCreateComponent.html":{}}}],["create/answer",{"_index":105,"title":{},"body":{"components/AnswerCreateComponent.html":{},"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"coverage.html":{}}}],["createdat:answer['created_at",{"_index":172,"title":{},"body":{"injectables/AnswerService.html":{}}}],["createdat:time",{"_index":348,"title":{},"body":{"components/QuestionComponent.html":{}}}],["createdby:'anonymus",{"_index":347,"title":{},"body":{"components/QuestionComponent.html":{}}}],["createdby:answer['created_by",{"_index":173,"title":{},"body":{"injectables/AnswerService.html":{}}}],["data",{"_index":110,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["date",{"_index":331,"title":{},"body":{"components/QuestionComponent.html":{}}}],["day",{"_index":337,"title":{},"body":{"components/QuestionComponent.html":{}}}],["day}/${this.months[month]}/${year",{"_index":343,"title":{},"body":{"components/QuestionComponent.html":{}}}],["declarations",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":120,"title":{},"body":{"components/AnswerCreateComponent.html":{}}}],["default",{"_index":43,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"classes/AnswerResponseModel.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{}}}],["dependencies",{"_index":189,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detail__answers",{"_index":357,"title":{},"body":{"components/QuestionComponent.html":{}}}],["details",{"_index":386,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["dialog",{"_index":261,"title":{},"body":{"components/QuestionComponent.html":{}}}],["dialogdata",{"_index":115,"title":{"interfaces/DialogData.html":{}},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["dialogref",{"_index":111,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":326,"title":{},"body":{"components/QuestionComponent.html":{}}}],["directive",{"_index":83,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["directives",{"_index":99,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["documentation",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["downvote",{"_index":27,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{}}}],["downvoted",{"_index":24,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{}}}],["downvoted:boolean=false",{"_index":301,"title":{},"body":{"components/QuestionComponent.html":{}}}],["downvotes:0",{"_index":350,"title":{},"body":{"components/QuestionComponent.html":{}}}],["downvotes:answer.downvotes||0",{"_index":171,"title":{},"body":{"injectables/AnswerService.html":{}}}],["downvotes:question.downvotes",{"_index":413,"title":{},"body":{"injectables/QuestionService.html":{}}}],["downvotes:question.downvotes||0",{"_index":411,"title":{},"body":{"injectables/QuestionService.html":{}}}],["dynamic",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":82,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["endpoint",{"_index":160,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["entrycomponents",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":444,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":178,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["export",{"_index":50,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"classes/AnswerResponseModel.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{}}}],["exports",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":45,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{},"miscellaneous/variables.html":{}}}],["features/answer",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["features/answer/answer.component",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["features/question",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/question/question.component",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["feed_answers",{"_index":139,"title":{},"body":{"classes/AnswerResponseModel.html":{},"injectables/AnswerService.html":{}}}],["feed_answers.map",{"_index":164,"title":{},"body":{"injectables/AnswerService.html":{}}}],["feed_answers:array",{"_index":142,"title":{},"body":{"classes/AnswerResponseModel.html":{}}}],["feed_questions",{"_index":406,"title":{},"body":{"injectables/QuestionService.html":{}}}],["feed_questions.map",{"_index":407,"title":{},"body":{"injectables/QuestionService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"classes/AnswerResponseModel.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{},"coverage.html":{}}}],["filteredquestions",{"_index":414,"title":{},"body":{"injectables/QuestionService.html":{}}}],["filteredquestions[0",{"_index":418,"title":{},"body":{"injectables/QuestionService.html":{}}}],["findall",{"_index":147,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["findall(questionid",{"_index":149,"title":{},"body":{"injectables/AnswerService.html":{}}}],["findone",{"_index":399,"title":{},"body":{"injectables/QuestionService.html":{}}}],["findone(id",{"_index":402,"title":{},"body":{"injectables/QuestionService.html":{}}}],["flexlayoutmodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["general",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["getanswers",{"_index":265,"title":{},"body":{"components/QuestionComponent.html":{}}}],["getanswers(questionid",{"_index":277,"title":{},"body":{"components/QuestionComponent.html":{}}}],["getquestion",{"_index":266,"title":{},"body":{"components/QuestionComponent.html":{}}}],["getquestion(id",{"_index":279,"title":{},"body":{"components/QuestionComponent.html":{}}}],["getquestions",{"_index":368,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["getting",{"_index":468,"title":{"index.html":{}},"body":{}}],["graph",{"_index":475,"title":{},"body":{"modules.html":{}}}],["hour",{"_index":339,"title":{},"body":{"components/QuestionComponent.html":{}}}],["hour}:${minute",{"_index":344,"title":{},"body":{"components/QuestionComponent.html":{}}}],["html",{"_index":81,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["https://api.myjson.com/bins/dck5b",{"_index":405,"title":{},"body":{"injectables/QuestionService.html":{}}}],["https://api.myjson.com/bins/hildr",{"_index":161,"title":{},"body":{"injectables/AnswerService.html":{}}}],["id",{"_index":165,"title":{},"body":{"injectables/AnswerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["id:any",{"_index":297,"title":{},"body":{"components/QuestionComponent.html":{}}}],["identifier",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["if(filteredquestions.length>0",{"_index":417,"title":{},"body":{"injectables/QuestionService.html":{}}}],["if(result",{"_index":327,"title":{},"body":{"components/QuestionComponent.html":{}}}],["if(this.downvoted",{"_index":55,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{}}}],["if(this.upvoted",{"_index":60,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{}}}],["if(value",{"_index":428,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["img",{"_index":76,"title":{},"body":{"components/AnswerComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"pipes/ReversePipe.html":{}}}],["import",{"_index":47,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{}}}],["imports",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"classes/AnswerResponseModel.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"classes/AnswerResponseModel.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{}}}],["inject",{"_index":124,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{}}}],["inject(mat_dialog_data",{"_index":121,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{}}}],["injectable",{"_index":143,"title":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["injectables",{"_index":145,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"overview.html":{}}}],["input",{"_index":48,"title":{},"body":{"components/AnswerComponent.html":{}}}],["input('answer",{"_index":52,"title":{},"body":{"components/AnswerComponent.html":{}}}],["inputs",{"_index":30,"title":{},"body":{"components/AnswerComponent.html":{}}}],["interface",{"_index":127,"title":{"interfaces/DialogData.html":{}},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":254,"title":{},"body":{"interfaces/DialogData.html":{}}}],["jan','feb','mar','apr','may','jun','jul','aug','sep','oct','nov','dec",{"_index":289,"title":{},"body":{"components/QuestionComponent.html":{}}}],["js",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["legend",{"_index":80,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"overview.html":{}}}],["list",{"_index":98,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["list.component",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.html",{"_index":365,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["list.component.scss",{"_index":364,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["list.component.ts",{"_index":363,"title":{},"body":{"components/QuestionListComponent.html":{},"coverage.html":{}}}],["list.component.ts:12",{"_index":374,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["list.component.ts:13",{"_index":370,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["list.component.ts:19",{"_index":373,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["list.component.ts:23",{"_index":372,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["list.component.ts:27",{"_index":371,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["list/question",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuestionListComponent.html":{},"coverage.html":{}}}],["map",{"_index":154,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["margin",{"_index":358,"title":{},"body":{"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["mat_dialog_data",{"_index":125,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{}}}],["matbuttonmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":102,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"classes/AnswerResponseModel.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":273,"title":{},"body":{"components/QuestionComponent.html":{}}}],["matdialogmodule",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":114,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{}}}],["matdividermodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule,matcardmodule,matgridlistmodule,maticonmodule,matdividermodule,matdialogmodule,matinputmodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":77,"title":{},"body":{"components/AnswerComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"pipes/ReversePipe.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"injectables/AnswerService.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{}}}],["minute",{"_index":341,"title":{},"body":{"components/QuestionComponent.html":{}}}],["miscellaneous",{"_index":480,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":186,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":188,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":335,"title":{},"body":{"components/QuestionComponent.html":{}}}],["months",{"_index":262,"title":{},"body":{"components/QuestionComponent.html":{}}}],["months:array",{"_index":322,"title":{},"body":{"components/QuestionComponent.html":{}}}],["name",{"_index":88,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{}}}],["new",{"_index":131,"title":{},"body":{"components/AnswerCreateComponent.html":{},"components/QuestionComponent.html":{},"coverage.html":{}}}],["newanswer",{"_index":128,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{}}}],["ngmodule",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":267,"title":{},"body":{"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["ngoninit",{"_index":28,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["now",{"_index":330,"title":{},"body":{"components/QuestionComponent.html":{}}}],["now.getdate",{"_index":338,"title":{},"body":{"components/QuestionComponent.html":{}}}],["now.getfullyear().tostring().substr",{"_index":333,"title":{},"body":{"components/QuestionComponent.html":{}}}],["now.gethours",{"_index":340,"title":{},"body":{"components/QuestionComponent.html":{}}}],["now.getminutes",{"_index":342,"title":{},"body":{"components/QuestionComponent.html":{}}}],["now.getmonth",{"_index":336,"title":{},"body":{"components/QuestionComponent.html":{}}}],["null",{"_index":64,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["object",{"_index":484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":134,"title":{},"body":{"components/AnswerCreateComponent.html":{}}}],["ondestroy",{"_index":256,"title":{},"body":{"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["oninit,ondestroy",{"_index":296,"title":{},"body":{"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["onnoclick",{"_index":112,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{}}}],["opendialog",{"_index":268,"title":{},"body":{"components/QuestionComponent.html":{}}}],["optional",{"_index":118,"title":{},"body":{"components/AnswerCreateComponent.html":{},"injectables/AnswerService.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{}}}],["out",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":477,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":448,"title":{"dependencies.html":{}},"body":{}}],["pages",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["parameters",{"_index":117,"title":{},"body":{"components/AnswerCreateComponent.html":{},"injectables/AnswerService.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{}}}],["params['id",{"_index":308,"title":{},"body":{"components/QuestionComponent.html":{}}}],["path",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pipe",{"_index":419,"title":{"pipes/ReversePipe.html":{}},"body":{"pipes/ReversePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":420,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["pipes/reverse.pipe",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":426,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["private",{"_index":259,"title":{},"body":{"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["production",{"_index":485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"classes/AnswerResponseModel.html":{},"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{}}}],["providedin",{"_index":157,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["providers",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":23,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"injectables/AnswerService.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["q&a",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["q.downvotes",{"_index":389,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["q.text",{"_index":384,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["q.upvotes",{"_index":387,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["question",{"_index":97,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{}}}],["question'},{'name",{"_index":95,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["question.component.html",{"_index":258,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.component.scss",{"_index":257,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.downvotes",{"_index":354,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.id",{"_index":408,"title":{},"body":{"injectables/QuestionService.html":{}}}],["question.id===id",{"_index":416,"title":{},"body":{"injectables/QuestionService.html":{}}}],["question.text",{"_index":409,"title":{},"body":{"injectables/QuestionService.html":{}}}],["question.upvotes",{"_index":352,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question/:id",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["question:any",{"_index":298,"title":{},"body":{"components/QuestionComponent.html":{}}}],["questioncomponent",{"_index":94,"title":{"components/QuestionComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questionid",{"_index":151,"title":{},"body":{"injectables/AnswerService.html":{},"components/QuestionComponent.html":{}}}],["questionid:answer['question",{"_index":167,"title":{},"body":{"injectables/AnswerService.html":{}}}],["questionlistcomponent",{"_index":96,"title":{"components/QuestionListComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questions",{"_index":366,"title":{},"body":{"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{}}}],["questions.filter",{"_index":415,"title":{},"body":{"injectables/QuestionService.html":{}}}],["questions:array",{"_index":375,"title":{},"body":{"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{}}}],["questionservice",{"_index":201,"title":{"injectables/QuestionService.html":{}},"body":{"modules/AppModule.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"coverage.html":{},"overview.html":{}}}],["questionssub",{"_index":367,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["questionssub:any",{"_index":376,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["questionsub",{"_index":263,"title":{},"body":{"components/QuestionComponent.html":{}}}],["questionsub:any",{"_index":303,"title":{},"body":{"components/QuestionComponent.html":{}}}],["redirectto",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reset",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response.model.ts",{"_index":138,"title":{},"body":{"classes/AnswerResponseModel.html":{},"coverage.html":{}}}],["response.model.ts:2",{"_index":141,"title":{},"body":{"classes/AnswerResponseModel.html":{}}}],["result",{"_index":101,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"classes/AnswerResponseModel.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":103,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"classes/AnswerResponseModel.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":162,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{}}}],["returns",{"_index":38,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"injectables/AnswerService.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{}}}],["reverse",{"_index":422,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["reversepipe",{"_index":199,"title":{"pipes/ReversePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/ReversePipe.html":{},"coverage.html":{},"overview.html":{}}}],["root",{"_index":158,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/QuestionService.html":{}}}],["root'},{'name",{"_index":93,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["route",{"_index":275,"title":{},"body":{"components/QuestionComponent.html":{}}}],["routermodule",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerparamssub",{"_index":264,"title":{},"body":{"components/QuestionComponent.html":{}}}],["routerparamssub:any",{"_index":302,"title":{},"body":{"components/QuestionComponent.html":{}}}],["routes",{"_index":244,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rxjs",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["rxjs/ajax",{"_index":153,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["rxjs/operators",{"_index":156,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["services",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["services/answer.service",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/QuestionComponent.html":{}}}],["services/question.service",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["slice:0:100)+'...':(q.text",{"_index":385,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["slice:0:100)+\\'...\\':(q.text",{"_index":395,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"classes/AnswerResponseModel.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{}}}],["src/.../environment.prod.ts",{"_index":482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/features/answer",{"_index":104,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["src/app/features/answer/answer.component.ts",{"_index":10,"title":{},"body":{"components/AnswerComponent.html":{},"coverage.html":{}}}],["src/app/features/answer/answer.component.ts:10",{"_index":36,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/features/answer/answer.component.ts:12",{"_index":46,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/features/answer/answer.component.ts:13",{"_index":33,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/features/answer/answer.component.ts:17",{"_index":40,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/features/answer/answer.component.ts:20",{"_index":41,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/features/answer/answer.component.ts:26",{"_index":37,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/features/question",{"_index":362,"title":{},"body":{"components/QuestionListComponent.html":{},"coverage.html":{}}}],["src/app/features/question/question.component.ts",{"_index":255,"title":{},"body":{"components/QuestionComponent.html":{},"coverage.html":{}}}],["src/app/features/question/question.component.ts:19",{"_index":288,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:20",{"_index":292,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:21",{"_index":285,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:22",{"_index":291,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:24",{"_index":295,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:25",{"_index":287,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:27",{"_index":294,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:28",{"_index":293,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:29",{"_index":274,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:35",{"_index":286,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:38",{"_index":282,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:46",{"_index":281,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:52",{"_index":280,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:57",{"_index":278,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:63",{"_index":284,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:69",{"_index":276,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:76",{"_index":290,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/features/question/question.component.ts:78",{"_index":283,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/models/answer",{"_index":137,"title":{},"body":{"classes/AnswerResponseModel.html":{},"coverage.html":{}}}],["src/app/pipes/reverse.pipe.ts",{"_index":421,"title":{},"body":{"pipes/ReversePipe.html":{},"coverage.html":{}}}],["src/app/pipes/reverse.pipe.ts:8",{"_index":425,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["src/app/services/answer.service.ts",{"_index":146,"title":{},"body":{"injectables/AnswerService.html":{},"coverage.html":{}}}],["src/app/services/answer.service.ts:13",{"_index":150,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/answer.service.ts:9",{"_index":148,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/services/question.service.ts",{"_index":398,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["src/app/services/question.service.ts:10",{"_index":400,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:15",{"_index":401,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question.service.ts:30",{"_index":403,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/environments/environment.prod.ts",{"_index":442,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":445,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":469,"title":{"index.html":{}},"body":{}}],["statements",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":129,"title":{},"body":{"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["support",{"_index":472,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":473,"title":{},"body":{"modules.html":{}}}],["table",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["text",{"_index":168,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["text:this.newanswer",{"_index":346,"title":{},"body":{"components/QuestionComponent.html":{}}}],["thanks",{"_index":133,"title":{},"body":{"components/AnswerCreateComponent.html":{}}}],["this._answer.findall(questionid).subscribe",{"_index":318,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this._question.findall().subscribe",{"_index":381,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["this._question.findone(id).subscribe",{"_index":315,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.answer.downvotes",{"_index":56,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.answer.upvotes",{"_index":53,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.answers",{"_index":319,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.answers.unshift",{"_index":345,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.answerssub",{"_index":317,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.answerssub.unsubscribe",{"_index":313,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.dialog.open(answercreatecomponent",{"_index":323,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.dialogref.close",{"_index":130,"title":{},"body":{"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{}}}],["this.downvoted",{"_index":59,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{}}}],["this.getanswers(this.id",{"_index":310,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.getquestion(this.id",{"_index":309,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.getquestions",{"_index":378,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["this.id",{"_index":307,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.newanswer",{"_index":325,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.question",{"_index":316,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.question.downvotes",{"_index":321,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.question.upvotes",{"_index":320,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questions",{"_index":382,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["this.questionssub",{"_index":380,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["this.questionssub.unsubscribe",{"_index":379,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["this.questionsub",{"_index":314,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionsub.unsubscribe",{"_index":312,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":306,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.routerparamssub",{"_index":305,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.routerparamssub.unsubscribe",{"_index":311,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.upvoted",{"_index":57,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{}}}],["time",{"_index":69,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{}}}],["title",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":394,"title":{},"body":{"components/QuestionListComponent.html":{}}}],["top:30px",{"_index":359,"title":{},"body":{"components/QuestionComponent.html":{}}}],["transform",{"_index":423,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["transform(value",{"_index":424,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["transform(value:any",{"_index":427,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["true",{"_index":58,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"classes/AnswerResponseModel.html":{},"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":63,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["upvote",{"_index":29,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{}}}],["upvoted",{"_index":25,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{}}}],["upvoted:boolean=false",{"_index":300,"title":{},"body":{"components/QuestionComponent.html":{}}}],["upvotes:0",{"_index":349,"title":{},"body":{"components/QuestionComponent.html":{}}}],["upvotes:answer.upvotes||0",{"_index":170,"title":{},"body":{"injectables/AnswerService.html":{}}}],["upvotes:question.upvotes",{"_index":412,"title":{},"body":{"injectables/QuestionService.html":{}}}],["upvotes:question.upvotes||0",{"_index":410,"title":{},"body":{"injectables/QuestionService.html":{}}}],["user",{"_index":71,"title":{},"body":{"components/AnswerComponent.html":{}}}],["value",{"_index":44,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"pipes/ReversePipe.html":{},"miscellaneous/variables.html":{}}}],["value.slice().reverse",{"_index":429,"title":{},"body":{"pipes/ReversePipe.html":{}}}],["var",{"_index":84,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"components/AppComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["variable",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":481,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AnswerComponent.html":{},"components/AnswerCreateComponent.html":{},"interfaces/DialogData.html":{},"components/QuestionComponent.html":{},"components/QuestionListComponent.html":{}}}],["width",{"_index":78,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{}}}],["workspan",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["write",{"_index":132,"title":{},"body":{"components/AnswerCreateComponent.html":{}}}],["year",{"_index":332,"title":{},"body":{"components/QuestionComponent.html":{}}}],["zone.js",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AnswerComponent.html":{"url":"components/AnswerComponent.html","title":"component - AnswerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AnswerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/answer/answer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-answer\n            \n\n            \n                styleUrls\n                ./answer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./answer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                downvoted\n                            \n                            \n                                    Public\n                                upvoted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                downvote\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                upvote\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                answer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/answer/answer.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        answer\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/answer/answer.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            downvote\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    downvote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/answer/answer.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/answer/answer.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            upvote\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upvote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/answer/answer.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            downvoted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/answer/answer.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            upvoted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/answer/answer.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, Input} from '@angular/core';\n\n@Component({\n\tselector: 'app-answer',\n\ttemplateUrl: './answer.component.html',\n\tstyleUrls: ['./answer.component.scss']\n})\nexport class AnswerComponent implements OnInit {\n\n\t@Input('answer') answer: any;\n\t\n\tpublic upvoted: boolean = false;\n\tpublic downvoted: boolean = false;\n\n\tconstructor() {}\n\n\tngOnInit() {\n\t}\n\n\tpublic upvote(){\n\t\tthis.answer.upvotes = + this.answer.upvotes +1;\n\t\tif(this.downvoted) this.answer.downvotes = + this.answer.downvotes -1;\n\t\tthis.upvoted = true;\n\t\tthis.downvoted = false;\n\t};\n\tpublic downvote(){\n\t\tthis.answer.downvotes = + this.answer.downvotes +1;\n\t\tif(this.upvoted) this.answer.upvotes = + this.answer.upvotes -1;\n\t\tthis.upvoted = false;\n\t\tthis.downvoted = true;\n\t};\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tUpvote arrow_drop_up\n\t\t\t\t\n\t\t\t\t{{ (answer.upvotes  == undefined || answer.upvotes == null )? ('0'):(answer.upvotes)}}\n\t\t\t\t\n\t\t\t\t\tDownvote arrow_drop_down\n\t\t\t\t\n\t\t\t\t{{(answer.downvotes == undefined || answer.downvotes == null)? ('0'):(answer.downvotes)}}\t\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tTime:\n\t\t\t\t\t{{answer.createdAt}}\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tUser:\n\t\t\t\t\t{{answer.createdBy.Name}}\n\t\t\t\t\t{{answer.createdBy.Surname}}\n\t\t\t\t\tAnonymus\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t\t\n\t\n\n    \n\n    \n                \n                    ./answer.component.scss\n                \n                .answer__avatar{\n\timg{\n\t\tmax-width: 30px;\n\t}\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUpvote arrow_drop_up\t\t\t\t\t\t\t\t{{ (answer.upvotes  == undefined || answer.upvotes == null )? (\\'0\\'):(answer.upvotes)}}\t\t\t\t\t\t\t\t\tDownvote arrow_drop_down\t\t\t\t\t\t\t\t{{(answer.downvotes == undefined || answer.downvotes == null)? (\\'0\\'):(answer.downvotes)}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTime:\t\t\t\t\t{{answer.createdAt}}\t\t\t\t\t\t\t\t\t\t\t\t\t\tUser:\t\t\t\t\t{{answer.createdBy.Name}}\t\t\t\t\t{{answer.createdBy.Surname}}\t\t\t\t\tAnonymus\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AnswerCreateComponent', 'selector': 'app-answer-create'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionListComponent', 'selector': 'app-question-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnswerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnswerCreateComponent.html":{"url":"components/AnswerCreateComponent.html","title":"component - AnswerCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AnswerCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/answer-create/answer-create.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-answer-create\n            \n\n            \n                styleUrls\n                ./answer-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./answer-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/answer-create/answer-create.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/answer-create/answer-create.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/answer-create/answer-create.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/answer-create/answer-create.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\n\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\nexport interface DialogData {\n  newAnswer: string;\n}\n\n@Component({\n  selector: 'app-answer-create',\n  templateUrl: './answer-create.component.html',\n  styleUrls: ['./answer-create.component.scss']\n})\nexport class AnswerCreateComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n    \n\n    \n        New answer\n\n  Write your answer\n  \n    \n  \n\n\n  No Thanks\n  Ok\n\n    \n\n    \n                \n                    ./answer-create.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'New answer  Write your answer          No Thanks  Ok'\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AnswerCreateComponent', 'selector': 'app-answer-create'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionListComponent', 'selector': 'app-question-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnswerCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnswerResponseModel.html":{"url":"classes/AnswerResponseModel.html","title":"class - AnswerResponseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnswerResponseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/answer-response.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                feed_answers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            feed_answers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/answer-response.model.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AnswerResponseModel {\n\tfeed_answers:Array\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnswerService.html":{"url":"injectables/AnswerService.html","title":"injectable - AnswerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnswerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/answer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/answer.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(questionId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/answer.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    questionId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nimport {ajax} from 'rxjs/ajax';\nimport {map, catchError} from 'rxjs/operators';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AnswerService {\n\n\tconstructor() {}\n\n\tpublic findAll(questionId) {\n\t\tconst endpoint = 'https://api.myjson.com/bins/hildr';\n\t\treturn ajax.getJSON(endpoint).pipe(\n\t\t\tmap( ({feed_answers}) => feed_answers.map( answer =>{\n\t\t\t\treturn {\n\t\t\t\t\tid: answer.Id,\n\t\t\t\t\tquestionId:answer['Question-Id'],\n\t\t\t\t\ttext: answer.Answer,\n\t\t\t\t\tupvotes:answer.upvotes||0,\n\t\t\t\t\tdownvotes:answer.downvotes||0,\n\t\t\t\t\tcreatedAt:answer['created_at'],\n\t\t\t\t\tcreatedBy:answer['created_by']\n\t\t\t\t};\n\t\t\t} )),\n\t\t\tmap( answers =>{\n\t\t\t\treturn answers.filter( a=>{\n\t\t\t\t\treturn a.questionId ===questionId;\n\t\t\t\t} );\t\t\t\t\n\t\t\t} ),\n\t\t\tcatchError(error => error)\n\t\t);\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'workspan'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'workspan';\n}\n\n    \n\n    \n        \t\n  \n    Q&A\n  \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t      Q&A  '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AnswerCreateComponent', 'selector': 'app-answer-create'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionListComponent', 'selector': 'app-question-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAnswerComponent\n\nAnswerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnswerComponent->AppModule\n\n\n\n\n\nAnswerCreateComponent\n\nAnswerCreateComponent\n\nAppModule -->\n\nAnswerCreateComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nQuestionComponent\n\nQuestionComponent\n\nAppModule -->\n\nQuestionComponent->AppModule\n\n\n\n\n\nQuestionListComponent\n\nQuestionListComponent\n\nAppModule -->\n\nQuestionListComponent->AppModule\n\n\n\n\n\nReversePipe\n\nReversePipe\n\nAppModule -->\n\nReversePipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAnswerService\n\nAnswerService\n\nAppModule -->\n\nAnswerService->AppModule\n\n\n\n\n\nQuestionService\n\nQuestionService\n\nAppModule -->\n\nQuestionService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AnswerComponent\n                        \n                        \n                            AnswerCreateComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            QuestionComponent\n                        \n                        \n                            QuestionListComponent\n                        \n                        \n                            ReversePipe\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AnswerCreateComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AnswerService\n                        \n                        \n                            QuestionService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {MatButtonModule, MatToolbarModule,MatCardModule,MatGridListModule,MatIconModule,MatDividerModule,MatDialogModule,MatInputModule} from '@angular/material';\n\nimport { AppComponent } from './app.component';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { QuestionComponent } from './features/question/question.component';\nimport { AnswerComponent } from './features/answer/answer.component';\nimport { QuestionListComponent } from './features/question-list/question-list.component';\n\n//Services\nimport {AnswerService} from './services/answer.service'; \nimport {QuestionService} from './services/question.service';\nimport { AnswerCreateComponent } from './features/answer-create/answer-create.component';\nimport { ReversePipe } from './pipes/reverse.pipe'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionComponent,\n    AnswerComponent,\n    QuestionListComponent,\n    AnswerCreateComponent,\n    ReversePipe\n  ],\n  imports: [\n    BrowserModule,\n\tBrowserAnimationsModule,\n\tAppRoutingModule,\n\tFlexLayoutModule,\n\tMatButtonModule, \n\tMatToolbarModule,\n\tMatCardModule,\n\tMatGridListModule,\n\tMatIconModule,\n\tMatDividerModule,\n\tMatDialogModule,\n\tMatInputModule,\n\tFormsModule\n  ],\n  providers: [\n\tAnswerService,\n\tQuestionService\n  ],\n  entryComponents: [AnswerCreateComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\n// General pages\nimport {QuestionListComponent} from './features/question-list/question-list.component';\nimport {QuestionComponent} from './features/question/question.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'question', pathMatch: 'full' },\n\t{path: 'question', component: QuestionListComponent},\n\t{path: 'question/:id', component: QuestionComponent},\n]\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/answer-create/answer-create.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        newAnswer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        newAnswer\n                                    \n                                \n                                \n                                    \n                                        newAnswer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\n\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\nexport interface DialogData {\n  newAnswer: string;\n}\n\n@Component({\n  selector: 'app-answer-create',\n  templateUrl: './answer-create.component.html',\n  styleUrls: ['./answer-create.component.scss']\n})\nexport class AnswerCreateComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionComponent.html":{"url":"components/QuestionComponent.html","title":"component - QuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/question/question.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question\n            \n\n            \n                styleUrls\n                ./question.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                answers\n                            \n                            \n                                    Private\n                                answersSub\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                downvoted\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                months\n                            \n                            \n                                    Public\n                                newAnswer\n                            \n                            \n                                    Public\n                                question\n                            \n                            \n                                    Private\n                                questionSub\n                            \n                            \n                                    Private\n                                routerParamsSub\n                            \n                            \n                                    Public\n                                upvoted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                downvote\n                            \n                            \n                                    Private\n                                getAnswers\n                            \n                            \n                                    Private\n                                getQuestion\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                    Public\n                                upvote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, _question: QuestionService, _answer: AnswerService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/question/question.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _question\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _answer\n                                                  \n                                                        \n                                                                        AnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            downvote\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    downvote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/question/question.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAnswers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAnswers(questionId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/question/question.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    questionId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getQuestion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getQuestion(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/question/question.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/question/question.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/question/question.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/question/question.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            upvote\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upvote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/question/question.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            answers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/question/question.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            answersSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/question/question.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/question/question.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            downvoted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/question/question.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/question/question.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            months\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/question/question.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newAnswer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/question/question.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            question\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/question/question.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            questionSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/question/question.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routerParamsSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/question/question.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            upvoted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/question/question.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit,OnDestroy} from '@angular/core';\n\nimport {MatDialog} from '@angular/material';\n\nimport {ActivatedRoute} from '@angular/router';\n\nimport {QuestionService} from '../../services/question.service';\nimport {AnswerService} from '../../services/answer.service';\n\nimport {AnswerCreateComponent} from '../answer-create/answer-create.component';\n\n@Component({\n\tselector: 'app-question',\n\ttemplateUrl: './question.component.html',\n\tstyleUrls: ['./question.component.scss'],\n})\nexport class QuestionComponent implements OnInit, OnDestroy {\n\t\n\tpublic id:any;\n\tpublic question:any;\n\tpublic answers:any;\n\tpublic newAnswer: string;\n\t\n\tpublic upvoted:boolean=false;\n\tpublic downvoted:boolean=false;\n\t\n\tprivate routerParamsSub:any;\n\tprivate questionSub:any;\n\tprivate answersSub:any;\n\n\tconstructor(\n\t\tprivate route: ActivatedRoute,\n\t\tprivate _question: QuestionService,\n\t\tprivate _answer: AnswerService,\n\t\tpublic dialog: MatDialog\n\t\t) {}\n\n\tngOnInit() {\n\t\tthis.routerParamsSub = this.route.params.subscribe(params => {\n\t\t\tthis.id = params['id']; \n\t\t\tthis.getQuestion(this.id);\n\t\t\tthis.getAnswers(this.id);\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.routerParamsSub.unsubscribe();\n\t\tthis.questionSub.unsubscribe();\n\t\tthis.answersSub.unsubscribe();\n\t}\n\t\n\tprivate getQuestion(id){\n\t\tthis.questionSub = this._question.findOne(id).subscribe( data=>{\n\t\t\tthis.question = data;\n\t\t});\t\t\n\t};\n\tprivate getAnswers(questionId){\n\t\tthis.answersSub = this._answer.findAll(questionId).subscribe( data=>{\n\t\t\tthis.answers = data;\n\t\t});\n\t};\n\t\t\n\tpublic upvote(){\n\t\tthis.question.upvotes = + this.question.upvotes +1;\n\t\tif(this.downvoted) this.question.downvotes = + this.question.downvotes -1;\n\t\tthis.upvoted = true;\n\t\tthis.downvoted = false;\n\t};\n\tpublic downvote(){\n\t\tthis.question.downvotes = + this.question.downvotes +1;\n\t\tif(this.upvoted) this.question.upvotes = + this.question.upvotes -1;\n\t\tthis.upvoted = false;\n\t\tthis.downvoted = true;\n\t};\n\t\t\t\n\tmonths:Array = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\t\n\t\n\topenDialog(): void {\n\t\tconst dialogRef = this.dialog.open(AnswerCreateComponent, {\n\t\t\twidth: '70%',\n\t\t\tdata: { newAnswer: this.newAnswer}\n\t\t});\n\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\tif(result){\n\t\t\t\tconsole.log('The dialog was closed');\n\t\t\t\tthis.newAnswer = result;\n\n\t\t\t\tconst now = new Date();\n\t\t\t\tconst year = now.getFullYear().toString().substr(-2);\n\t\t\t\tconst month = now.getMonth();\n\t\t\t\tconst day = now.getDate();\n\t\t\t\tconst hour = now.getHours();\n\t\t\t\tconst minute = now.getMinutes();\n\t\t\t\tconst time = `${day}/${this.months[month]}/${year} ${hour}:${minute}`;\n\t\t\t\t\n\t\t\t\tthis.answers.unshift({\n\t\t\t\t\ttext:this.newAnswer,\n\t\t\t\t\tcreatedBy:'Anonymus',\n\t\t\t\t\tcreatedAt:time,\n\t\t\t\t\tupvotes:0,\n\t\t\t\t\tdownvotes:0\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\t\n\t\t\t\tarrow_back\n\t\t\t\n\t\t\n\t\n\n\t\n\t\t\n\t\t\tQuestion:\n\t\t\n\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tUpvote arrow_drop_up\n\t\t\t\n\t\t\t{{ (question.upvotes  == undefined || question.upvotes == null )? ('0'):(question.upvotes)}}\n\t\t\t\n\t\t\t\tDownvote arrow_drop_down\n\t\t\t\n\t\t\t{{(question.downvotes == undefined || question.downvotes == null)? ('0'):(question.downvotes)}}\n\t\t\n\t\t\n\n\t\n\t\t\n\t\t\tAnswers:\n\t\t\n\t\t\n\t\t\n\t\t\tAdd answer\n\t\t\n\t\t\n\t\t\n\t\t\t \n\t\t\n\t\n\n    \n\n    \n                \n                    ./question.component.scss\n                \n                .question-detail__answers{\n\tmargin-top:30px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\tarrow_back\t\t\t\t\t\t\t\t\t\t\t\tQuestion:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUpvote arrow_drop_up\t\t\t\t\t\t{{ (question.upvotes  == undefined || question.upvotes == null )? (\\'0\\'):(question.upvotes)}}\t\t\t\t\t\t\tDownvote arrow_drop_down\t\t\t\t\t\t{{(question.downvotes == undefined || question.downvotes == null)? (\\'0\\'):(question.downvotes)}}\t\t\t\t\t\t\t\t\t\tAnswers:\t\t\t\t\t\t\t\t\tAdd answer\t\t\t\t\t\t\t\t\t \t\t\t'\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AnswerCreateComponent', 'selector': 'app-answer-create'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionListComponent', 'selector': 'app-question-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionListComponent.html":{"url":"components/QuestionListComponent.html","title":"component - QuestionListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/question-list/question-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-list\n            \n\n            \n                styleUrls\n                ./question-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                questions\n                            \n                            \n                                    Private\n                                questionsSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getQuestions\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_question: QuestionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/question-list/question-list.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _question\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getQuestions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getQuestions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/question-list/question-list.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/question-list/question-list.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/question-list/question-list.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/question-list/question-list.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            questionsSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/question-list/question-list.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit,OnDestroy} from '@angular/core';\n\nimport { QuestionService } from '../../services/question.service';\n\n@Component({\n\tselector: 'app-question-list',\n\ttemplateUrl: './question-list.component.html',\n\tstyleUrls: ['./question-list.component.scss']\n})\nexport class QuestionListComponent implements OnInit,OnDestroy {\n\n\tquestions:Array;\n\tprivate questionsSub:any;\n\n\tconstructor(\n\t\tprivate _question:QuestionService\n\t) {}\n\n\tngOnInit() {\n\t\tthis.getQuestions();\n\t}\n\t\n\tngOnDestroy(){\n\t\tthis.questionsSub.unsubscribe();\n\t};\n\t\n\tprivate getQuestions(){\n\t\tthis.questionsSub = this._question.findAll().subscribe( data =>{\n\t\t\tthis.questions = data;\n\t\t} );\n\t};\n}\n\n    \n\n    \n        \n\t\n\t\t \n\t\t\t\n\t\t\t\t100)? (q.text | slice:0:100)+'...':(q.text)\">\t\n\t\t\t\n\t\t\t \n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tDetails\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tarrow_drop_up\n\t\t\t\t\t\t\t{{ (q.upvotes  == undefined || q.upvotes == null )? ('0'):(q.upvotes)}}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tarrow_drop_down\n\t\t\t\t\t\t\t{{(q.downvotes == undefined || q.downvotes == null)? ('0'):(q.downvotes)}}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n                \n                    ./question-list.component.scss\n                \n                .question-card{\n\tmargin-bottom: 20px;\n\tmargin-top: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t \t\t\t\t\t\t\t100)? (q.text | slice:0:100)+\\'...\\':(q.text)\">\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDetails\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrow_drop_up\t\t\t\t\t\t\t{{ (q.upvotes  == undefined || q.upvotes == null )? (\\'0\\'):(q.upvotes)}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrow_drop_down\t\t\t\t\t\t\t{{(q.downvotes == undefined || q.downvotes == null)? (\\'0\\'):(q.downvotes)}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AnswerCreateComponent', 'selector': 'app-answer-create'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionListComponent', 'selector': 'app-question-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/question.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                questions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/question.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            questions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/question.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nimport {ajax} from 'rxjs/ajax';\nimport {map, catchError,filter} from 'rxjs/operators';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class QuestionService {\n\tpublic questions:Array=[];\n\n\tconstructor(\n\t) {}\n\n\tpublic findAll(){\n\t\tconst endpoint = 'https://api.myjson.com/bins/dck5b';\n\t\treturn ajax.getJSON(endpoint).pipe(\n\t\t\tmap( ({feed_questions}) => feed_questions.map( question =>{\n\t\t\t\treturn {\n\t\t\t\t\tid: question.Id,\n\t\t\t\t\ttext: question.Text,\n\t\t\t\t\tupvotes:question.upvotes||0,\n\t\t\t\t\tdownvotes:question.downvotes||0\n\t\t\t\t};\n\t\t\t} )),\n\t\t\tcatchError(error => error)\n\t\t);\n\t}\n\t\n\tpublic findOne(id){\n\t\tconst endpoint = 'https://api.myjson.com/bins/dck5b';\n\t\treturn ajax.getJSON(endpoint).pipe(\n\t\t\tmap( ({feed_questions}) => feed_questions.map( question =>{\n\t\t\t\treturn {\n\t\t\t\t\tid: question.Id,\n\t\t\t\t\ttext: question.Text,\n\t\t\t\t\tupvotes:question.upvotes,\n\t\t\t\t\tdownvotes:question.downvotes\n\t\t\t\t};\n\t\t\t} )),\n\t\t\tmap( questions =>{\n\t\t\t\tlet filteredQuestions = questions.filter( question=> question.id===id );\n\t\t\t\t\n\t\t\t\tif(filteredQuestions.length>0) return filteredQuestions[0];\n\t\t\t\treturn {};\n\t\t\t} ),\n\t\t\tcatchError(error => error)\n\t\t);\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ReversePipe.html":{"url":"pipes/ReversePipe.html","title":"pipe - ReversePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ReversePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/reverse.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        reverse\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/reverse.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'reverse'\n})\nexport class ReversePipe implements PipeTransform {\n\n  transform(value:any) {\n    if(value) return value.slice().reverse();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/features/answer-create/answer-create.component.ts\n            \n            component\n            AnswerCreateComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/features/answer-create/answer-create.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/features/answer/answer.component.ts\n            \n            component\n            AnswerComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/features/question-list/question-list.component.ts\n            \n            component\n            QuestionListComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/question/question.component.ts\n            \n            component\n            QuestionComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/models/answer-response.model.ts\n            \n            class\n            AnswerResponseModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pipes/reverse.pipe.ts\n            \n            pipe\n            ReversePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/answer.service.ts\n            \n            injectable\n            AnswerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.11\n        \n            @angular/cdk : ^7.3.6\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/flex-layout : ^7.0.0-beta.24\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/material : ^7.3.6\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nworkspan\nCode challenge\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAnswerComponent\n\nAnswerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnswerComponent->AppModule\n\n\n\n\n\nAnswerCreateComponent\n\nAnswerCreateComponent\n\nAppModule -->\n\nAnswerCreateComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nQuestionComponent\n\nQuestionComponent\n\nAppModule -->\n\nQuestionComponent->AppModule\n\n\n\n\n\nQuestionListComponent\n\nQuestionListComponent\n\nAppModule -->\n\nQuestionListComponent->AppModule\n\n\n\n\n\nReversePipe\n\nReversePipe\n\nAppModule -->\n\nReversePipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAnswerService\n\nAnswerService\n\nAppModule -->\n\nAnswerService->AppModule\n\n\n\n\n\nQuestionService\n\nQuestionService\n\nAppModule -->\n\nQuestionService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
